%load baseline, followup images and affine transformation matrix
[fixed,spacing] = myReadNifti('../Downloads/assignment_data/baseline.nii');
[moving,~] = myReadNifti('../Downloads/assignment_data/followup.nii');
data = load('-ascii','../Downloads/assignment_data/f2b.txt');
[seg,~] = myReadNifti('../Downloads/assignment_data/followup.nii');
A = data(1:3,1:3);
b = data(1:3,4);
%%3.6.4 
arguments_cell = {'nearest','linear',{'linear','G',2},{'linear','<M',2}
%%3.6.5 final
%set up vactors of various filter values
sigmas = 0:.5:5;
radia = 0:10;
RMS_gaussians = zeros(1,11);
RMS_means = zeros(1,11);
for i = 1:11
    sigma = sigmas(i);
    radius = radia(i);
    %compute differenceimages
    if i == 1
        di_gaussian = differenceImages(fixed,moving,spacing,A,b,'linear');
        di_mean = di_gaussian;
    else
        di_gaussian = differenceImages(fixed,moving,spacing,A,b,'linear','G',sigma);
        di_mean = differenceImages(fixed,moving,spacing,A,b,'linear','M',[],radius);
    end
    RMS_gaussians(i) = myRMSOverROI(di_gaussian,seg,1);
    RMS_means(i) = myRMSOverROI(di_mean,seg,1);
end
figure
plot(sigmas,RMS_gaussians);
figure
plot(radia,RMS_means);